[{"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\App.js":"2","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\index.js":"3","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Services\\dataService.js":"4","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Header.jsx":"5","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Contact.jsx":"6","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\About.jsx":"7","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Home.jsx":"8","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Login.jsx":"9","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Signup.jsx":"10","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Utilities\\constants.js":"11","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\LoginPage.jsx":"12","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\HomePage.jsx":"13","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\AboutPage.jsx":"14","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\ContactPage.jsx":"15","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\SignUpPage.jsx":"16","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\NotFound.jsx":"17","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Reducers\\index.js":"18","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Reducers\\reducer.js":"19","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Actions\\action-type.js":"20","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Actions\\action.js":"21"},{"size":362,"mtime":1609515490641,"results":"22","hashOfConfig":"23"},{"size":1649,"mtime":1611139885249,"results":"24","hashOfConfig":"23"},{"size":980,"mtime":1611141589908,"results":"25","hashOfConfig":"23"},{"size":711,"mtime":1611151985208,"results":"26","hashOfConfig":"23"},{"size":1551,"mtime":1610714532004,"results":"27","hashOfConfig":"23"},{"size":419,"mtime":1611170121755,"results":"28","hashOfConfig":"23"},{"size":203,"mtime":1610566545040,"results":"29","hashOfConfig":"23"},{"size":2991,"mtime":1611169908032,"results":"30","hashOfConfig":"23"},{"size":4327,"mtime":1611173390139,"results":"31","hashOfConfig":"23"},{"size":6109,"mtime":1610643107856,"results":"32","hashOfConfig":"23"},{"size":171,"mtime":1610625116674,"results":"33","hashOfConfig":"23"},{"size":178,"mtime":1610889208100,"results":"34","hashOfConfig":"23"},{"size":185,"mtime":1610712955579,"results":"35","hashOfConfig":"23"},{"size":190,"mtime":1610713171248,"results":"36","hashOfConfig":"23"},{"size":199,"mtime":1610887490122,"results":"37","hashOfConfig":"23"},{"size":196,"mtime":1610713551557,"results":"38","hashOfConfig":"23"},{"size":167,"mtime":1610735256541,"results":"39","hashOfConfig":"23"},{"size":193,"mtime":1611164214868,"results":"40","hashOfConfig":"23"},{"size":786,"mtime":1611169779245,"results":"41","hashOfConfig":"23"},{"size":76,"mtime":1611143330266,"results":"42","hashOfConfig":"23"},{"size":273,"mtime":1611169747149,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"obz49o",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\reportWebVitals.js",[],["93","94"],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\App.js",["95"],"import React, {useState, useEffect, Fragment} from 'react'\n\n// API Calling\n//import { getUserAsync } from './Services/dataService'\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport LoginPage from './Component/Pages/LoginPage';\nimport HomePage from './Component/Pages/HomePage';\nimport AboutPage from './Component/Pages/AboutPage';\nimport ContactPage from './Component/Pages/ContactPage';\nimport SignUpPage from './Component/Pages/SignUpPage';\nimport NotFound from './Component/Pages/NotFound';\n\nfunction App(props) {\n\n  const[isAuthState, setisAutheticated] = useState(false);\n\n  \n  useEffect(() => {\n    const isAutheticated = localStorage.getItem(\"isAuth\");\n    setisAutheticated(isAutheticated);\n    console.log('=================', isAuthState, '++++', isAutheticated);\n  },[isAuthState])\n\n  // const isAuth = localStorage.getItem(\"isAuth\");\n  console.log('IsAuth', isAuthState);\n  \n  \n  return (\n    <Fragment>  \n      <div>\n        {/* Hi {props.name} */}\n      </div>  \n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact component={LoginPage} />\n            { isAuthState ?           \n            <>\n              <Route path=\"/home\" exact component={HomePage} />\n              <Route path=\"/About\" component={AboutPage} />\n              <Route path=\"/Contact\" component={ContactPage} />\n              <Route path=\"/Signup\" component={SignUpPage} />\n              {/* <Route component={NotFound} /> */}\n              </>\n            : <Redirect to='/' />  }\n\n        </Switch>\n      </BrowserRouter>\n\n    </Fragment>\n  );\n}\n\n// App.defaultProps = {\n//   name:'Ali'\n// }\nexport default App;\n","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\index.js",["96","97"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// \nimport {createStore,applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './Redux/Reducers/index'\nimport thunk from 'redux-thunk'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store=createStore(rootReducer,composeEnhancers())\n// \nconsole.log('Store ', store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Services\\dataService.js",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Header.jsx",[],["98","99"],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Contact.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\About.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Home.jsx",["100","101","102","103"],"import React, {useState, useEffect} from 'react';\r\nimport { getUserAsync, getPostsAsync } from '../Services/dataService';\r\n\r\nimport Header from './Header';\r\nimport {fetchUsers,fetchPosts} from '../Redux/Actions/action'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction Home(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState([0]);\r\n\r\n\r\n  useEffect( async () => {\r\n   \r\n    const getUsers = async () =>{\r\n\r\n      let response = await getUserAsync();\r\n      setData(response);\r\n\r\n      props.fetchUsers(response)\r\n    }\r\n    getUsers();  \r\n  },[])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <TableContainer >\r\n           <Table className={classes.table} aria-label=\"customized table\">\r\n             <TableHead>\r\n               <TableRow>\r\n                 <StyledTableCell>ID</StyledTableCell>\r\n                 <StyledTableCell align=\"right\">Name</StyledTableCell>\r\n                 <StyledTableCell align=\"right\">Email</StyledTableCell>\r\n                 <StyledTableCell align=\"right\">Address</StyledTableCell>\r\n                 <StyledTableCell align=\"right\">Website</StyledTableCell>\r\n               </TableRow>\r\n             </TableHead>\r\n             <TableBody>\r\n               {data && data.map((user) => (\r\n                <StyledTableRow key={user.id}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {user.id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{user.name}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{user.email}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{user.address   && user.address.street}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{user.website}</StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n return{\r\n   fetchUsers: (users)=>dispatch(fetchUsers(users))\r\n };\r\n};\r\n\r\nexport default connect(null ,mapDispatchToProps)(Home)","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Login.jsx",["104","105"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Grid, Paper, Avatar, TextField, Button, Link, Typography } from '@material-ui/core';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {userNameField1,passwordField1} from '../Utilities/constants';\r\n\r\nimport {getPostsAsync} from '../Services/dataService';\r\nimport {connect} from 'react-redux'\r\nimport {fetchPosts} from '../Redux/Actions/action'\r\n\r\nfunction Login(props) {\r\n\r\n    //login State variables\r\n    const [userName,setuserName]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [loginSuccess,setLoginSuccess]=useState(false);\r\n\r\n    //css styling\r\n    const paperStyle ={padding: 20, height: '70vh' ,width: 280, margin: \"20px auto\"}\r\n    const avatarStyle={backgroundColor:'green'}\r\n    const btnStyle={margin:'8px 0px'}\r\n\r\n    \r\n    //onChange Method\r\n    const userNameField = (userName) =>{\r\n        console.log('User Name '+ userName)\r\n        setuserName(userName)\r\n    }\r\n\r\n    const userPasswordField = (userPassword) =>{\r\n        console.log('User Password '+ userPassword)\r\n        setPassword(userPassword)\r\n    }\r\n\r\n    //Api Call\r\n    // useEffect(async()=>{\r\n    //     let response_posts = await getPostsAsync();\r\n    //     console.log('response posts login',response_posts);\r\n    //     console.log('props ',props)\r\n\r\n        \r\n    // },[])\r\n    \r\n    //formLogin\r\n    const formLogin = async (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(userName === userNameField1 && password === passwordField1){\r\n            localStorage.setItem(\"isAuth\",true)\r\n\r\n            //redirect to home\r\n            console.log('success', props);\r\n            setLoginSuccess(true);\r\n            \r\n            let response_posts = await getPostsAsync();\r\n            // post_data\r\n            props.fetchPosts(response_posts);\r\n        \r\n        }\r\n        else{\r\n            //redirect to log in\r\n            console.log('failed')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: \"10vh\" }}>\r\n            {!loginSuccess ? <Grid>\r\n                <Paper elevation={10} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}>\r\n                            <LockIcon/>\r\n                        </Avatar>\r\n                        <h1>Sign in</h1>\r\n                        \r\n                    </Grid>\r\n                    <form onSubmit={formLogin}>\r\n                        <TextField label='User Name' placeholder='Enter User Name'fullWidth required onChange={\r\n                            (e)=>{userNameField(e.target.value)}} />\r\n\r\n                        <TextField label='Password'type='password' placeholder='Enter password'fullWidth required onChange={\r\n                            (e)=>{userPasswordField(e.target.value)}}/>\r\n                        <FormControlLabel\r\n                            control={\r\n                            <Checkbox\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                            }\r\n                            label=\"Remember Me\"\r\n                        />\r\n                        <Button type='submit' onClick={formLogin} color='primary' variant='contained' style={btnStyle} fullWidth>Login</Button>\r\n                    </form>\r\n\r\n                    <Typography>\r\n                        <Link to =\"/signup\">\r\n                            Forgot Password\r\n                        </Link>\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n                        Don`t have an account?\r\n                        <Link to =\"/signup\" >\r\n                            Sign Up\r\n                        </Link>\r\n                    </Typography>\r\n                </Paper>\r\n            </Grid>         \r\n            : <Redirect to='/home' /> \r\n}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps=state=>({\r\n    data:state.usersPostsData\r\n})\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n      fetchPosts: (posts)=>dispatch(fetchPosts(posts))\r\n    };\r\n   };\r\n   \r\nexport default connect(null ,mapDispatchToProps)(Login)\r\n\r\n","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Signup.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Utilities\\constants.js",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\LoginPage.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\HomePage.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\AboutPage.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\ContactPage.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\SignUpPage.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Component\\Pages\\NotFound.jsx",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Reducers\\index.js",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Reducers\\reducer.js",["106"],"import {FETCH_DATA,FETCH_POSTS} from '../Actions/action-type'\r\n\r\nconst initialState = {\r\n    fetchUsersData: [],\r\n    usersPostsData:[]\r\n}\r\n\r\n// fetch user data\r\nexport default function fetchUsersData(state = [], action) {\r\n    switch (action.type) {\r\n        case FETCH_DATA:\r\n\r\n        return [\r\n                ...state,\r\n                {fetchUsersData: action.data}\r\n            ]            \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n// userPostData\r\nexport function usersPostsData(state = [], action) {\r\n    switch (action.type) {\r\n        case FETCH_POSTS:\r\n\r\n            \r\n            return [\r\n                ...state,\r\n                {usersPostsData: action.data}\r\n            ]            \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n","C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Actions\\action-type.js",[],"C:\\Users\\ASIM_MEHMOOD\\Desktop\\my-app\\src\\Redux\\Actions\\action.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":16},{"ruleId":"111","severity":1,"message":"115","line":8,"column":21,"nodeType":"113","messageId":"114","endLine":8,"endColumn":36},{"ruleId":"111","severity":1,"message":"116","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":13},{"ruleId":"107","replacedBy":"117"},{"ruleId":"109","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":2,"column":24,"nodeType":"113","messageId":"114","endLine":2,"endColumn":37},{"ruleId":"111","severity":1,"message":"120","line":5,"column":20,"nodeType":"113","messageId":"114","endLine":5,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":47,"column":14,"nodeType":"123","endLine":57,"endColumn":4},{"ruleId":"121","severity":1,"message":"124","line":57,"column":5,"nodeType":"125","endLine":57,"endColumn":7,"suggestions":"126"},{"ruleId":"111","severity":1,"message":"127","line":1,"column":16,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"128","line":120,"column":7,"nodeType":"113","messageId":"114","endLine":120,"endColumn":22},{"ruleId":"111","severity":1,"message":"129","line":3,"column":7,"nodeType":"113","messageId":"114","endLine":3,"endColumn":19},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.",["130"],["131"],"'getPostsAsync' is defined but never used.","'fetchPosts' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["132"],"'useEffect' is defined but never used.","'mapStateToProps' is assigned a value but never used.","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [props]",{"range":"135","text":"136"},[1427,1429],"[props]"]